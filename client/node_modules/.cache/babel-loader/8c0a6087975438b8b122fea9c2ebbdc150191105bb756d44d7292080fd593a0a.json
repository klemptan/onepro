{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhokipery\\\\Documents\\\\works\\\\onepro\\\\onepro\\\\client\\\\src\\\\pages\\\\Brands.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Context } from '../index';\nimport MyBreadcrumbs from '../components/CategoryPage/MyBreadcrumbs';\nimport BrandsList from '../components/BrandsPage/BrandsList';\nimport { fetchBrands } from '../http/shopAPI';\nimport { useParams } from 'react-router-dom';\nimport BrandPage from '../components/BrandsPage/BrandPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Brands = () => {\n  _s();\n  const {\n    good\n  } = useContext(Context);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchBrands().then(data => good.setBrands(data));\n    let links = [{\n      title: 'Главная',\n      link: '/',\n      active: false\n    }, {\n      title: 'Поиск по производителю',\n      link: '/brands',\n      active: true\n    }];\n    if (id) {\n      links = [{\n        title: 'Главная',\n        link: '/',\n        active: false\n      }, {\n        title: 'Поиск по производителю',\n        link: '/brands',\n        active: false\n      }, {\n        title: good.getBrandNameById(id),\n        link: '/brands/brand/' + id,\n        active: true\n      }];\n    }\n    good.setBreadcrumbsLinks(links);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyBreadcrumbs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), id ? /*#__PURE__*/_jsxDEV(BrandPage, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(BrandsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Brands, \"srze/ETC/608Ucqp2KQRIQqhkn0=\", false, function () {\n  return [useParams];\n});\n_c = Brands;\nexport default Brands;\nvar _c;\n$RefreshReg$(_c, \"Brands\");","map":{"version":3,"names":["React","useContext","useEffect","Context","MyBreadcrumbs","BrandsList","fetchBrands","useParams","BrandPage","Brands","good","id","then","data","setBrands","links","title","link","active","getBrandNameById","setBreadcrumbsLinks"],"sources":["C:/Users/jhokipery/Documents/works/onepro/onepro/client/src/pages/Brands.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { Context } from '../index'\r\nimport MyBreadcrumbs from '../components/CategoryPage/MyBreadcrumbs'\r\nimport BrandsList from '../components/BrandsPage/BrandsList'\r\nimport { fetchBrands } from '../http/shopAPI'\r\nimport { useParams } from 'react-router-dom'\r\nimport BrandPage from '../components/BrandsPage/BrandPage'\r\n\r\nconst Brands = () => {\r\n    const { good } = useContext(Context)\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        fetchBrands().then(data => good.setBrands(data))\r\n\r\n        let links = [{ title: 'Главная', link: '/', active: false },\r\n        { title: 'Поиск по производителю', link: '/brands', active: true }]\r\n        if (id) {\r\n            links = [{ title: 'Главная', link: '/', active: false },\r\n            { title: 'Поиск по производителю', link: '/brands', active: false },\r\n            { title: good.getBrandNameById(id), link: '/brands/brand/' + id, active: true }]\r\n        }\r\n        good.setBreadcrumbsLinks(links)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <MyBreadcrumbs />\r\n            {id ?\r\n                <BrandPage id={id} />\r\n                :\r\n                <BrandsList />\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Brands"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,oCAAoC;AAAA;AAAA;AAE1D,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM;IAAEC;EAAK,CAAC,GAAGT,UAAU,CAACE,OAAO,CAAC;EACpC,MAAM;IAAEQ;EAAG,CAAC,GAAGJ,SAAS,EAAE;EAC1BL,SAAS,CAAC,MAAM;IACZI,WAAW,EAAE,CAACM,IAAI,CAACC,IAAI,IAAIH,IAAI,CAACI,SAAS,CAACD,IAAI,CAAC,CAAC;IAEhD,IAAIE,KAAK,GAAG,CAAC;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAM,CAAC,EAC3D;MAAEF,KAAK,EAAE,wBAAwB;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;IACnE,IAAIP,EAAE,EAAE;MACJI,KAAK,GAAG,CAAC;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAM,CAAC,EACvD;QAAEF,KAAK,EAAE,wBAAwB;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAM,CAAC,EACnE;QAAEF,KAAK,EAAEN,IAAI,CAACS,gBAAgB,CAACR,EAAE,CAAC;QAAEM,IAAI,EAAE,gBAAgB,GAAGN,EAAE;QAAEO,MAAM,EAAE;MAAK,CAAC,CAAC;IACpF;IACAR,IAAI,CAACU,mBAAmB,CAACL,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,wBACI,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAG,EAChBJ,EAAE,gBACC,QAAC,SAAS;MAAC,EAAE,EAAEA;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,gBAErB,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAGnB;AAGX,CAAC;AAAA,GA5BKF,MAAM;EAAA,QAEOF,SAAS;AAAA;AAAA,KAFtBE,MAAM;AA8BZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}