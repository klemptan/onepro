{"ast":null,"code":"import React,{useContext,useEffect}from'react';import{Context}from'../index';import MyBreadcrumbs from'../components/CategoryPage/MyBreadcrumbs';import BrandsList from'../components/BrandsPage/BrandsList';import{fetchBrands}from'../http/shopAPI';import{useParams}from'react-router-dom';import BrandPage from'../components/BrandsPage/BrandPage';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Brands=function Brands(){var _useContext=useContext(Context),good=_useContext.good;var _useParams=useParams(),id=_useParams.id;useEffect(function(){fetchBrands().then(function(data){return good.setBrands(data);});var links=[{title:'Главная',link:'/',active:false},{title:'Поиск по производителю',link:'/brands',active:true}];if(id){links=[{title:'Главная',link:'/',active:false},{title:'Поиск по производителю',link:'/brands',active:false},{title:good.getBrandNameById(id),link:'/brands/brand/'+id,active:true}];}good.setBreadcrumbsLinks(links);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MyBreadcrumbs,{}),id?/*#__PURE__*/_jsx(BrandPage,{id:id}):/*#__PURE__*/_jsx(BrandsList,{})]});};export default Brands;","map":{"version":3,"names":["React","useContext","useEffect","Context","MyBreadcrumbs","BrandsList","fetchBrands","useParams","BrandPage","Brands","good","id","then","data","setBrands","links","title","link","active","getBrandNameById","setBreadcrumbsLinks"],"sources":["C:/Users/jhokipery/Documents/works/onepro/onepro/client/src/pages/Brands.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { Context } from '../index'\r\nimport MyBreadcrumbs from '../components/CategoryPage/MyBreadcrumbs'\r\nimport BrandsList from '../components/BrandsPage/BrandsList'\r\nimport { fetchBrands } from '../http/shopAPI'\r\nimport { useParams } from 'react-router-dom'\r\nimport BrandPage from '../components/BrandsPage/BrandPage'\r\n\r\nconst Brands = () => {\r\n    const { good } = useContext(Context)\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        fetchBrands().then(data => good.setBrands(data))\r\n\r\n        let links = [{ title: 'Главная', link: '/', active: false },\r\n        { title: 'Поиск по производителю', link: '/brands', active: true }]\r\n        if (id) {\r\n            links = [{ title: 'Главная', link: '/', active: false },\r\n            { title: 'Поиск по производителю', link: '/brands', active: false },\r\n            { title: good.getBrandNameById(id), link: '/brands/brand/' + id, active: true }]\r\n        }\r\n        good.setBreadcrumbsLinks(links)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <MyBreadcrumbs />\r\n            {id ?\r\n                <BrandPage id={id} />\r\n                :\r\n                <BrandsList />\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Brands"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CACpD,OAASC,OAAO,KAAQ,UAAU,CAClC,MAAOC,cAAa,KAAM,0CAA0C,CACpE,MAAOC,WAAU,KAAM,qCAAqC,CAC5D,OAASC,WAAW,KAAQ,iBAAiB,CAC7C,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAOC,UAAS,KAAM,oCAAoC,8IAE1D,GAAMC,OAAM,CAAG,QAATA,OAAM,EAAS,CACjB,gBAAiBR,UAAU,CAACE,OAAO,CAAC,CAA5BO,IAAI,aAAJA,IAAI,CACZ,eAAeH,SAAS,EAAE,CAAlBI,EAAE,YAAFA,EAAE,CACVT,SAAS,CAAC,UAAM,CACZI,WAAW,EAAE,CAACM,IAAI,CAAC,SAAAC,IAAI,QAAIH,KAAI,CAACI,SAAS,CAACD,IAAI,CAAC,GAAC,CAEhD,GAAIE,MAAK,CAAG,CAAC,CAAEC,KAAK,CAAE,SAAS,CAAEC,IAAI,CAAE,GAAG,CAAEC,MAAM,CAAE,KAAM,CAAC,CAC3D,CAAEF,KAAK,CAAE,wBAAwB,CAAEC,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAE,IAAK,CAAC,CAAC,CACnE,GAAIP,EAAE,CAAE,CACJI,KAAK,CAAG,CAAC,CAAEC,KAAK,CAAE,SAAS,CAAEC,IAAI,CAAE,GAAG,CAAEC,MAAM,CAAE,KAAM,CAAC,CACvD,CAAEF,KAAK,CAAE,wBAAwB,CAAEC,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAE,KAAM,CAAC,CACnE,CAAEF,KAAK,CAAEN,IAAI,CAACS,gBAAgB,CAACR,EAAE,CAAC,CAAEM,IAAI,CAAE,gBAAgB,CAAGN,EAAE,CAAEO,MAAM,CAAE,IAAK,CAAC,CAAC,CACpF,CACAR,IAAI,CAACU,mBAAmB,CAACL,KAAK,CAAC,CACnC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACI,wCACI,KAAC,aAAa,IAAG,CAChBJ,EAAE,cACC,KAAC,SAAS,EAAC,EAAE,CAAEA,EAAG,EAAG,cAErB,KAAC,UAAU,IAAG,GAGnB,CAGX,CAAC,CAED,cAAeF,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}